.grid-container {
    display: grid;
    /*crea columnas cada 230 pixeles*/
    grid-template-columns: repeat(auto-fill, 230px);
    /*separacion entre los elementos*/
    gap: 20px;
    /*centrar los elementos en su contenedor*/
    justify-content: center;
    /*grid-template-rows: masonry;*/
    margin: 0 auto;
}

.grid-item {
    /*esto para que las imagenes tengan un ancho de 230px*/
    width: 230px;
    margin-bottom: 10px;
    margin-top: 5px;
    border-radius: 20px;
    cursor: zoom-in;
    background-color: lightgray;
}

.grid-item:hover{
    filter: opacity(0.9);
    transform: scale(1.05);
}

/* h1{
    justify-content: center;
    color: darkblue;
    text-align: center;
} */

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    max-width: 1200px;
    margin: 20px auto;
}

h1 {
    font-family: 'Pacifico', cursive;
    color: #333;
    font-size: 2.5em;
    margin: 0;
}

.refresh-btn {
    background-color: #ff6347;
    color: #fff;
    border: none;
    padding: 10px 20px;
    font-size: 1em;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s ease;
}

.refresh-btn:hover {
    background-color: #ff4500;
}

@media (min-width: 320px) and (max-width: 767px) {
    h1{
        font-size: 20px;
    }
    
}

/*grid tiene la caracteristica de que, la columna mas alta definira el alto de toda la fila*/
/*una solucion es ponerle un valor al alto de las imagenes pero algunas se veran deformes, se perderan dimensiones.
 Con la propiedad cover se puede solucionar mas o menos, recortadas, pero se veran mas bien como targetas*/
/*Otra opcion es usar grid tipo pinterest grid-template-rows: masonry, pero solo funciona con la config de firefox, pero la solucion final es usar mansory js*/